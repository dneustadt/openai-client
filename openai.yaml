openapi: 3.0.0
servers:
  - url: 'https://api.openai.com/v1'
info:
  description: >-
    OpenAI is an AI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.
  version: 1.0.0
  title: OpenAI API
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: OpenAI
    description: OpenAI is an AI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.
paths:
  '/engines':
    get:
      tags:
        - engines
      summary: Lists the currently available engines, and provides basic information about each one such as the owner and availability.
      description: ''
      operationId: getEngines
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Engines'
      security:
        - api_key: []
  '/engines/{engine_id}':
    get:
      tags:
        - engines
      summary: Retrieves an engine instance, providing basic information about the engine such as the owner and availability.
      description: ''
      operationId: getEngineById
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: engine_id
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the engine to use for this request
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Engine'
      security:
        - api_key: []
  '/completions':
    post:
      tags:
        - completions
      summary: Creates a new completion for the provided prompt and parameters
      description: ''
      operationId: postCompletions
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Completion'
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              title: CompletionPayload
              type: object
              properties:
                model:
                  description: ID of the model to use.
                  required: true
                  type: string
                prompt:
                  description: The prompt(s) to generate completions for, encoded as a string, a list of strings, or a list of token lists.
                  required: true
                  oneOf:
                    - type: string
                    - type: array
                max_tokens:
                  description: The maximum number of tokens to generate. Requests can use up to 2048 tokens shared between prompt and completion.
                  type: integer
                  default: 16
                temperature:
                  description: The maximum number of tokens to generate. Requests can use up to 2048 tokens shared between prompt and completion.
                  type: number
                  default: 1
                top_p:
                  description: An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.
                  type: number
                  default: 1
                n:
                  description: How many completions to generate for each prompt.
                  type: integer
                  default: 1
                stream:
                  description: 'Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.'
                  type: boolean
                  default: false
                logprobs:
                  description: Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.
                  type: integer
                  default: null
                echo:
                  description: Echo back the prompt in addition to the completion.
                  type: boolean
                  default: false
                stop:
                  description: Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.
                  oneOf:
                    - type: string
                    - type: array
                  default: null
                presence_penalty:
                  description: Number between 0 and 1 that penalizes new tokens based on whether they appear in the text so far. Increases the model's likelihood to talk about new topics.
                  type: number
                  default: 0
                frequency_penalty:
                  description: Number between 0 and 1 that penalizes new tokens based on their existing frequency in the text so far. Decreases the model's likelihood to repeat the same line verbatim.
                  type: number
                  default: 0
                best_of:
                  description: Generates best_of completions server-side and returns the "best" (the one with the lowest log probability per token). Results cannot be streamed.
                  type: integer
                  default: 1
                logit_bias:
                  description: Modify the likelihood of specified tokens appearing in the completion.
                  type: object
                  default: null
  '/search':
    post:
      deprecated: true
      tags:
        - search
      summary: The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.
      description: ''
      operationId: postSearch
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: engine_id
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the engine to use for this request
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search'
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              title: SearchPayload
              type: object
              properties:
                documents:
                  description: The prompt(s) to generate completions for, encoded as a string, a list of strings, or a list of token lists.
                  type: array
                file:
                  description: The ID of an uploaded file that contains documents to search over. You should specify either documents or a file, but not both.
                  type: string
                query:
                  description: Query to search against the documents.
                  required: true
                  type: string
                max_rerank:
                  description: The maximum number of documents to be re-ranked and returned by search.
                  type: integer
                  default: 200
                return_metadata:
                  description: A special boolean flag for showing metadata. If set to true, each document entry in the returned JSON will contain a "metadata" field. This flag only takes effect when file is set.
                  type: boolean
                  default: false
  '/classifications':
    post:
      deprecated: true
      tags:
        - classification
      summary: The endpoint first searches over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the completions endpoint.
      description: ''
      operationId: postClassification
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              title: ClassificationPayload
              type: object
              properties:
                model:
                  description: ID of the engine to use for completion.
                  required: true
                  type: string
                query:
                  description: Query to be classified.
                  required: true
                  type: string
                examples:
                  description: A list of examples with labels.
                  type: array
                file:
                  description: The ID of the uploaded file that contains training examples. See upload file for how to upload a file of the desired format and purpose.
                  type: string
                labels:
                  description: The set of categories being classified. If not specified, candidate labels will be automatically collected from the examples you provide. All the label strings will be normalized to be capitalized.
                  type: array
                  default: null
                search_model:
                  description: ID of the engine to use for Search.
                  type: string
                  default: 'ada'
                temperature:
                  description: What sampling temperature to use. Higher values mean the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
                  type: number
                  default: 0
                logprobs:
                  description: Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.
                  type: integer
                  default: 0
                max_examples:
                  description: The maximum number of examples to be ranked by Search when using file. Setting it to a higher value leads to improved accuracy but with increased latency and cost.
                  type: integer
                  default: 200
                logit_bias:
                  description: Modify the likelihood of specified tokens appearing in the completion.
                  type: object
                  default: null
                return_prompt:
                  description: If set to true, the returned JSON will include a "prompt" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.
                  type: boolean
                  default: false
                return_metadata:
                  description: A special boolean flag for showing metadata. If set to true, each document entry in the returned JSON will contain a "metadata" field.
                  type: boolean
                  default: false
                expand:
                  description: If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support completion and file objects for expansion.
                  type: array
                  default: []
  '/answers':
    post:
      deprecated: true
      tags:
        - answer
      summary: Answers the specified question using the provided documents and examples.
      description: ''
      operationId: postAnswer
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
      security:
        - api_key: [ ]
      requestBody:
        content:
          application/json:
            schema:
              title: AnswerPayload
              type: object
              properties:
                model:
                  description: ID of the engine to use for completion.
                  required: true
                  type: string
                question:
                  description: Question to get answered.
                  required: true
                  type: string
                examples:
                  description: List of (question, answer) pairs that will help steer the model towards the tone and answer format you'd like. We recommend adding 2 to 3 examples.
                  required: true
                  type: array
                examples_context:
                  description: A text snippet containing the contextual information used to generate the answers for the examples you provide.
                  required: true
                  type: string
                documents:
                  description: List of documents from which the answer for the input question should be derived. If this is an empty list, the question will be answered based on the question-answer examples.
                  type: array
                file:
                  description: The ID of an uploaded file that contains documents to search over. See upload file for how to upload a file of the desired format and purpose.
                  type: string
                search_model:
                  description: ID of the engine to use for Search.
                  type: string
                  default: 'ada'
                temperature:
                  description: What sampling temperature to use. Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer.
                  type: number
                  default: 0
                logprobs:
                  description: Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.
                  type: integer
                  default: 0
                max_tokens:
                  description: The maximum number of tokens allowed for the generated answer.
                  type: integer
                  default: 16
                stop:
                  description: Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.
                  oneOf:
                    - type: string
                    - type: array
                  default: null
                n:
                  description: How many answers to generate for each question.
                  type: integer
                  default: 1
                logit_bias:
                  description: Modify the likelihood of specified tokens appearing in the completion.
                  type: object
                  default: null
                return_metadata:
                  description: A special boolean flag for showing metadata. If set to true, each document entry in the returned JSON will contain a "metadata" field.
                  type: boolean
                  default: false
                return_prompt:
                  description: If set to true, the returned JSON will include a "prompt" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.
                  type: boolean
                  default: false
                expand:
                  description: If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support completion and file objects for expansion.
                  type: array
                  default: [ ]
  '/files':
    get:
      tags:
        - files
      summary: Returns a list of files that belong to the user's organization.
      description: ''
      operationId: getFiles
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
      security:
        - api_key: []
    post:
      tags:
        - files
      summary: Upload a file that contains document(s) to be used across various endpoints/features.
      description: ''
      operationId: postFile
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      security:
        - api_key: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              title: FilePayload
              type: object
              properties:
                file:
                  description: File to upload.
                  required: true
                  type: string
                  format: binary
                purpose:
                  description: The intended purpose of the uploaded documents.
                  required: true
                  type: string
  '/files/{file_id}':
    get:
      tags:
        - files
      summary: Returns information about a specific file.
      description: ''
      operationId: getFileById
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
      security:
        - api_key: []
    delete:
      tags:
        - files
      summary: Delete a file.
      description: ''
      operationId: deleteFile
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Success
  '/images/generations':
    post:
      tags:
        - images
      summary: Given a prompt and/or an input image, the model will generate a new image.
      description: ''
      operationId: postImagesGenerations
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
      security:
        - api_key: [ ]
      requestBody:
        content:
          application/json:
            schema:
              title: ImagesGenerationsPayload
              type: object
              properties:
                prompt:
                  description: A text description of the desired image(s). The maximum length is 1000 characters.
                  required: true
                  type: string
                n:
                  description: The number of images to generate. Must be between 1 and 10.
                  type: integer
                  default: 1
                size:
                  description: The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
                  type: string
                  default: '1024x1024'
                response_format:
                  description: The format in which the generated images are returned. Must be one of url or b64_json.
                  type: string
                  default: 'url'
                user:
                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.
                  type: string
                  default: null
  '/images/edits':
    post:
      tags:
        - images
      summary: Creates an edited or extended image given an original image and a prompt.
      description: ''
      operationId: postImagesEdits
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
      security:
        - api_key: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              title: ImagesEditsPayload
              type: object
              properties:
                image:
                  description: An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
                  required: true
                  type: string
                  format: binary
                mark:
                  description: The image to edit. Must be a valid PNG file, less than 4MB, and square.
                  required: true
                  type: string
                  format: binary
                n:
                  description: The number of images to generate. Must be between 1 and 10.
                  type: integer
                  default: 1
                size:
                  description: The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
                  type: string
                  default: '1024x1024'
                response_format:
                  description: The format in which the generated images are returned. Must be one of url or b64_json.
                  type: string
                  default: 'url'
                user:
                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.
                  type: string
                  default: null
  '/images/variations':
    post:
      tags:
        - images
      summary: Creates a variation of a given image.
      description: ''
      operationId: postImagesVariations
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
      security:
        - api_key: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              title: ImagesVariationsPayload
              type: object
              properties:
                image:
                  description: The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.
                  required: true
                  type: string
                  format: binary
                n:
                  description: The number of images to generate. Must be between 1 and 10.
                  type: integer
                  default: 1
                size:
                  description: The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
                  type: string
                  default: '1024x1024'
                response_format:
                  description: The format in which the generated images are returned. Must be one of url or b64_json.
                  type: string
                  default: 'url'
                user:
                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.
                  type: string
                  default: null
  '/models':
    get:
      tags:
        - models
      summary: Lists the currently available models, and provides basic information about each one such as the owner and availability.
      description: ''
      operationId: getModels
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
      security:
        - api_key: []
  '/models/{model}':
    get:
      tags:
        - models
      summary: Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
      description: ''
      operationId: getModel
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: model
          in: path
          schema:
            type: string
          required: true
          description: The ID of the model to use for this request
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
      security:
        - api_key: []
    delete:
      tags:
        - models
      summary: Delete a fine-tuned model. You must have the Owner role in your organization.
      description: ''
      operationId: deleteModel
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: model
          in: path
          schema:
            type: string
          required: true
          description: The model to delete
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDelete'
      security:
        - api_key: []
  '/embeddings':
    post:
      tags:
        - embeddings
      summary: Creates an embedding vector representing the input text.
      description: ''
      operationId: postEmbeddings
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Embeddings'
      security:
        - api_key: [ ]
      requestBody:
        content:
          application/json:
            schema:
              title: EmbeddingsPayload
              type: object
              properties:
                model:
                  description: ID of the model to use. You can use the List models API to see all of your available models, or see our Model overview for descriptions of them.
                  required: true
                  type: string
                input:
                  description: Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed 2048 tokens in length.
                  required: true
                  type: string
                user:
                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.
                  type: string
                  default: null
  '/moderations':
    post:
      tags:
        - moderations
      summary: Classifies if text violates OpenAI's Content Policy
      description: ''
      operationId: postModerations
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moderations'
      security:
        - api_key: [ ]
      requestBody:
        content:
          application/json:
            schema:
              title: ModerationsPayload
              type: object
              properties:
                input:
                  description: The input text to classify
                  required: true
                  type: string
                model:
                  description: Two content moderations models are available - text-moderation-stable and text-moderation-latest.
                  type: string
                  default: 'text-moderation-latest'
  '/fine-tunes':
    get:
      tags:
        - fine-tunes
      summary: List your organization's fine-tuning jobs
      description: ''
      operationId: getFineTunes
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTunes'
      security:
        - api_key: [ ]
    post:
      tags:
        - fine-tunes
      summary: Creates a job that fine-tunes a specified model from a given dataset.
      description: ''
      operationId: postFineTunes
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTune'
      security:
        - api_key: [ ]
      requestBody:
        content:
          application/json:
            schema:
              title: FineTunesPayload
              type: object
              properties:
                training_file:
                  description: The ID of an uploaded file that contains training data.
                  required: true
                  type: string
                validation_file:
                  description: The ID of an uploaded file that contains validation data.
                  type: string
                model:
                  description: The name of the base model to fine-tune. You can select one of "ada", "babbage", "curie", "davinci", or a fine-tuned model created after 2022-04-21. To learn more about these models, see the Models documentation.
                  type: string
                  default: 'curie'
                n_epochs:
                  description: The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
                  type: integer
                  default: 4
                batch_size:
                  description: The batch size to use for training. The batch size is the number of training examples used to train a single forward and backward pass.
                  type: integer
                  default: null
                learning_rate_multiplier:
                  description: The learning rate multiplier to use for training. The fine-tuning learning rate is the original learning rate used for pretraining multiplied by this value.
                  type: number
                  default: null
                prompt_loss_weight:
                  description: The weight to use for loss on the prompt tokens. This controls how much the model tries to learn to generate the prompt (as compared to the completion which always has a weight of 1.0), and can add a stabilizing effect to training when completions are short.
                  type: number
                  default: 0.01
                compute_classification_metrics:
                  description: If set, we calculate classification-specific metrics such as accuracy and F-1 score using the validation set at the end of every epoch. These metrics can be viewed in the results file.
                  type: boolean
                  default: false
                classification_n_classes:
                  description: The number of classes in a classification task.
                  type: integer
                  default: null
                classification_positive_class:
                  description: The positive class in binary classification.
                  type: string
                  default: null
                classification_betas:
                  description: If this is provided, we calculate F-beta scores at the specified beta values. The F-beta score is a generalization of F-1 score. This is only used for binary classification.
                  type: array
                  default: null
                suffix:
                  description: A string of up to 40 characters that will be added to your fine-tuned model name.
                  type: string
                  default: null
  '/fine-tunes/{fine_tune_id}':
    get:
      tags:
        - fine-tunes
      summary: Gets info about the fine-tune job.
      description: ''
      operationId: getFineTune
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: fine_tune_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the fine-tune job
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTune'
  '/fine-tunes/{fine_tune_id}/cancel':
    post:
      tags:
        - fine-tunes
      summary: Immediately cancel a fine-tune job.
      description: ''
      operationId: postFineTuneCancel
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: fine_tune_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the fine-tune job to cancel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTune'
      security:
        - api_key: []
  '/fine-tunes/{fine_tune_id}/events':
    get:
      tags:
        - fine-tunes
      summary: Get fine-grained status updates for a fine-tune job.
      description: ''
      operationId: getFineTuneEvents
      parameters:
        - name: OpenAI-Organization
          in: header
          schema:
            type: string
          required: false
        - name: fine_tune_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the fine-tune job to get events for.
        - name: stream
          in: query
          schema:
            type: boolean
          description: Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only server-sent events as they become available.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuneEvents'
externalDocs:
  description: Find out more about OpenAI API
  url: 'https://beta.openai.com/docs/api-reference/files/retrieve'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Engines:
      title: Engines
      type: object
      properties:
        object:
          type: string
        data:
          type: array
          items:
            type: object
    Engine:
      title: Engine
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        owner:
          type: string
        ready:
          type: boolean
    Completion:
      title: Completion
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        created:
          type: integer
        model:
          type: string
        choices:
          type: array
          items:
            type: object
    Search:
      title: Search
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        object:
          type: string
    Classification:
      title: Classification
      type: object
      properties:
        completion:
          type: string
        label:
          type: string
        model:
          type: string
        object:
          type: string
        search_model:
          type: string
        selected_examples:
          type: array
          items:
            type: object
    Answer:
      title: Answer
      type: object
      properties:
        answers:
          type: array
          items:
            type: string
        completion:
          type: string
        model:
          type: string
        object:
          type: string
        search_model:
          type: string
        selected_documents:
          type: array
          items:
            type: object
    Files:
      title: Files
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        object:
          type: string
    File:
      title: File
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        bytes:
          type: integer
        created_at:
          type: integer
        filename:
          type: string
        purpose:
          type: string
    Images:
      title: Images
      type: object
      properties:
        created:
          type: integer
        data:
          type: array
          items:
            type: object
    Models:
      title: Models
      type: object
      properties:
        object:
          type: string
        data:
          type: array
          items:
            type: object
    Model:
      title: Model
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        owned_by:
          type: string
        permission:
          type: array
    ModelDelete:
      title: ModelDelete
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        deleted:
          type: boolean
    Embeddings:
      title: Embeddings
      type: object
      properties:
        object:
          type: string
        data:
          type: array
          items:
            type: object
        usage:
          type: object
    Moderations:
      title: Moderations
      type: object
      properties:
        id:
          type: string
        model:
          type: string
        result:
          type: array
          items:
            type: object
    FineTunes:
      title: FineTunes
      type: object
      properties:
        object:
          type: string
        data:
          type: array
          items:
            type: object
    FineTune:
      title: FineTune
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        model:
          type: string
        created_at:
          type: integer
        events:
          type: array
          items:
            type: object
        fine_tuned_model:
          type: string
        hyperparams:
          type: object
        organization_id:
          type: string
        result_files:
          type: array
        status:
          type: string
        validation_files:
          type: array
        training_files:
          type: array
          items:
            type: object
        updated_at:
          type: integer
    FineTuneEvents:
      title: FineTuneEvents
      type: object
      properties:
        object:
          type: string
        data:
          type: array
          items:
            type: object
